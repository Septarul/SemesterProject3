@page "/login"
@using BlazorWebApp.Model.Domain
@using System.Text.Json
@inject IJSRuntime JsRuntime
@inject HttpClient client

<p>Hello there, login</p>


<div class="form-group">
    <label>User name:</label>
    <input type="text" placeholder="user name" @bind-value="_username" />
</div>
<div class="form-group">
    <label>Password</label>
    <input type="text" placeholder="password" @bind-value="_password" />
</div>

<button class="btn btn-primary" @onclick="PerformLogin">Login</button>

@code {

    private string _username;
    private string _password;

    public async Task PerformLogin()
    {

        User user = new User { Username = _username, Password = _password };

        HttpContent json = new StringContent(JsonSerializer.Serialize(user));
        var response = await client.PostAsync("http://localhost:8080/login", json);
        Console.WriteLine("Login here");

        // TODO get and verify username and password here against database

        var interop = new Interop(JsRuntime);
        string antiforgerytoken = await interop.GetElementByName("__RequestVerificationToken");

        // Here I provide fields matching the arguments of my login method, in LoginRequester.cshtml.cs
        var fields = new { __RequestVerificationToken = antiforgerytoken, username = _username, password = _password };

        // Here I make a call to the loginRequester.cshtml.cs, the post method, with fields as argument.
        // it happens through the Interop.cs class
        await interop.SubmitForm("/loginRequester/", fields);
    }

}